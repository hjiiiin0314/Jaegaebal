<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.jaegaebal.mapper.UpmuMapper">
<!-- 결재처리함 -자신에게 올라온 전체 결재리스트 -->
	<select id="decideList" parameterType="string" resultType="UpmuDocument">
		SELECT
			l.app_staff_num			as	appStaffNum
			,d.app_doc_code			as	docCode
			,d.doc_type				as	docType
			,d.writer_buseo_code	as	writerBuseoCode
			,d.writer_num			as	writerNum
			,d.doc_title			as	docTitle
			,d.write_date			as	writeDate
			,d.doc_file				as	docFile
			,d.app_security			as	appSecurity
			,d.deadline				as	deadline
			,t.doc_type				as	docTypeName
			,s.staff_name			as	writerName
			,j.jojic_name			as	writerBuseoName
			,lv.level_name			as	writerLevelName
			
		FROM
				um_app_line AS l
			INNER JOIN 
				um_document	AS d
			ON
				l.doc_code = d.app_doc_code
			INNER join
				um_doctype	AS t
			on
			 	d.doc_type = t.doc_code
			INNER join
				is_staff	AS s
			on
				d.writer_num = s.staff_num
			INNER join
				is_jojic	AS j
			ON 
				d.writer_buseo_code = j.jojic_code
			INNER join
				is_level	AS lv
			on
				s.staff_level_code = lv.level_code

	</select>
<!-- 상신함 - 결재상태보기  -->
	<select id="appResult" parameterType="String" resultType="UpmuDocument">
		SELECT 
			l.*
			,j.jojic_name
			,s.staff_name
			,v.level_name
		FROM 
					um_app_line	AS l
			inner join
					um_document AS d
			on
					l.doc_code = d.app_doc_code
			INNER join
					is_jojic	AS j
			on
				l.app_jojic_code = j.jojic_code
			INNER join
					is_staff	AS s
			on
				s.staff_num = l.app_staff_num
			INNER join
				is_level	AS v
			on
				v.level_code = l.staff_level_code
		WHERE 
				d.app_doc_code= #{docCode};
	
	</select>
<!-- 상신함 - 상세보기 결재라인만  -->
	<select id="getAppLine" parameterType="String" resultType="UpmuDocument">
		SELECT
			 a.line_num
			,a.doc_code				as	docCode
			,a.app_jojic_code		as	appJojicCode
			,a.staff_level_code		as	staffLevelCode
			,a.app_staff_num		as	appStaffNum				
			,a.app_result			as	appStateCode
			,a.app_staff_coment		as	docComent
			,a.app_date				as	appDate
			,s.staff_name			as	appStaffName
			,j.jojic_name			as	appJojicName
			,l.level_name			as	appLevelName
			,state.app_state		as	appStateName
		FROM
				um_app_line	AS a
			INNER join
				is_staff	AS	s
			on
				a.app_staff_num = s.staff_num
			INNER join
				is_jojic AS j
			ON 
				a.app_jojic_code = j.jojic_code
			INNER join
				is_level	AS l
			on
				a.staff_level_code =l.level_code
			left join
				um_appstate	AS state
			on
				a.app_result = state.app_state_code
		WHERE
			doc_code = #{docCode}
	</select>
	
<!-- 상신함 - 상세보기 문서만 -->
	<select id="docDetail" parameterType="String" resultType="UpmuDocument">
		SELECT 
			d.app_doc_code		as	docCode	
			, d.doc_type		as	docType
			, doc_title			as	docTitle
			, doc_contents		as	docContents
			, doc_coment		as	docComent
			, write_date		as	writeDate
			, doc_file			as	docFile
			, app_security		as	appSecurity
			, deadline			as	deadline
			, t.doc_type		as	docTypeName

		FROM 
			um_document	AS d
		inner join
			um_doctype	AS t
		on
			d.doc_type = t.doc_code
	
		WHERE 
			d.app_doc_code = #{docCode}
	</select>
<!-- 임시저장함 - 삭제 -->
	<delete id="delStorage" parameterType="String">
		DELETE 
		FROM 
			um_storage_box
		WHERE
			app_doc_code = #{docCode} 	
	</delete>
<!-- 임시저장함 - 조건검색 -->	
	<select id="searchStorage" resultType="UpmuDocument">
		SELECT 
			s.storage_num  			AS docCode
			, s.doc_type			AS docType
			, t.doc_type			AS docTypeName				
			, writer_buseo_code		AS writerBuseoCode
			, writer_num			AS writerNum
			, doc_title				AS docTitle
			, doc_contents			AS docContents
			, write_date			AS writeDate
			, doc_file				AS docFile
			, app_security			AS appSecurity
			, deadline				AS deadline
		FROM 
				um_storage_box AS s
			join
				um_doctype AS t
			on
				s.doc_type = t.doc_code
		<if test="sk neq ''.toString">
		where
		${sk} LIKE CONCAT('%',#{sv},'%')
		</if>
	</select>


<!-- 임시저장함 - 전체검색  -->
	<select id="storageBox" resultType="UpmuDocument">
		SELECT
			storage_num 			AS docCode
			, t.doc_type 			AS docTypeName
			, s.doc_type 			AS docType
			, writer_buseo_code 	AS writerBuseoCode
			, writer_num			AS writerNum
			, doc_title				AS docTitle
			, doc_contents			AS docContents
			, write_date			AS writeDate
			, doc_file				AS docFile
			,app_security			as appSecurity
			, deadline				AS deadline
		FROM
				um_storage_box AS s
			join
				um_doctype AS t
			ON 
				s.doc_type = t.doc_code
	
	</select>
		
<!-- 상신함 - 조건검색 -->	
	<select id="searchAppList" resultType="UpmuDocument">
		SELECT
			a.app_state_code		as appStateCode
			,d.app_doc_code		as docCode
			,t.doc_type			as docTypeName
			,writer_buseo_code	as writerBuseoCode
			,writer_num			as writerNum
			,doc_title			as docTitle
			,doc_contents		as docContents
			,write_date			as writeDate
			,doc_file			as docFile
			,a.app_state		as appStateName
			,app_security		as appSecurity
			,deadline			as deadline
			,d.doc_type			as docType
		FROM
			um_appstate AS a
			INNER join
			um_document AS d
		ON
			a.app_state_code=d.app_state
		INNER join
			um_doctype AS t
		on
			t.doc_code=d.doc_type
		<if test="sk neq ''.toString">
		where
		${sk} LIKE CONCAT('%',#{sv},'%')
		</if>
	</select>
	
<!-- 상신함 - 전체 조회  -->
	<select id="myAppList" resultType="UpmuDocument">
		SELECT
			a.app_state_code
			,d.app_doc_code		as docCode
			,t.doc_type			as docTypeName
			,writer_buseo_code	as writerBuseoCode
			,writer_num			as writerNum
			,doc_title			as docTitle
			,doc_contents		as docContents
			,write_date			as writeDate
			,doc_file			as docFile
			,a.app_state		as appStateName
			,app_security		as appSecurity
			,deadline			as deadline
			,d.doc_type			as docType
		FROM
			um_appstate AS a
			INNER join
			um_document AS d
		ON
			a.app_state_code=d.app_state
		INNER join
			um_doctype AS t
		on
			t.doc_code=d.doc_type;
	
	 
	</select>
<!-- 기안하기 - 기안문서 db에 넣기 -->
	<insert id="appWrite" parameterType="UpmuDocument" >
		<selectKey resultType="String" keyProperty="docCode" order="BEFORE">
			select 
				CONCAT('doc-',max(CAST(substring(app_doc_code,5) AS DECIMAL))+1) 
			FROM 
				um_document
		</selectKey>
		INSERT INTO um_document
					(app_doc_code
					, doc_type
					, writer_buseo_code
					, writer_num
					, doc_title
					, doc_contents
					, doc_coment
					, write_date
					, doc_file
					, app_security
					, deadline
					, app_state)
	VALUES 
		(#{docCode}
		, #{docType}
		, #{writerBuseoCode}     		<!-- 세션으로 넘어올 값 -->
		, #{writerNum}  		<!-- 세션으로 넘어올 값 -->
		, #{docTitle}
		, #{docContents}
		, #{docComent}
		, NOW()
		, #{docFile}
		, #{appSecurity}
		, #{deadline}
		, 'ac-04')		 	<!-- 초기값은 미열람  -->
	
	</insert>
	
<!-- 기안하기 - 결재라인 선택 완료 db에 넣기  -->
	<insert id="choiceStaff" parameterType="list" >
	INSERT INTO um_app_line
						(
							doc_code
						, app_jojic_code 	
						, staff_level_code  
						, app_staff_num		
						, chamjo)
	VALUES 
	<foreach collection="list" item="item" separator=",">	
		(#{item.getDocCode}
		, #{item.jojicCode}
		, #{item.levelCode}
		, #{item.staffNum}
		, '')
	</foreach>
	</insert>	
	
<!-- 기안하기 - 결재라인 - 조직도 - 사원  -->
   <select id="getStaff" resultType="StaffInfo">
	SELECT 
		staff_num  			as staffNum
		,staff_name 		as staffName 
		,s.staff_level_code	AS staffLevelCode
		,s.jojic_code		as jojicCode
		,j.jojic_name 		AS jojicName
		,j.jojic_sosoc_name AS jojicSosocName
		,l.level_name 		AS levelName
	FROM 
		is_staff AS s
	join
		is_jojic AS j
	on
		s.jojic_code = j.jojic_code
	join
		is_level AS l
	on
		s.staff_level_code=l.level_code;  
  </select>

<!-- 기안하기 - 결재라인 - 조직도 - 팀  -->
  <select id="getTeam" resultType="Jojic">
	SELECT 
		jojic_name			as jojicName
		,jojic_sosoc_name	as jojicSosocName
		,parent_jojic_name	as parentJojicName
	FROM
		is_jojic
  </select>
  
 <!-- 기안하기 - 결재라인-최상위(부서) 검색  -->
 <select id="getJojic" resultType="Jojic">
 	SELECT 
 		DISTINCT(parent_jojic_name)	as parentJojicName
	FROM 
		is_jojic; 
 </select>
 
 <!-- 기안하기에서 문서유형검색  -->
 <select id="getDocType" resultType="Map">
 	SELECT 
 		doc_type as docTypeName
 		,doc_code AS docCode
	FROM 
		um_doctype
 </select>
                        
</mapper>