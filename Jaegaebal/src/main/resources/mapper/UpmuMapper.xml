<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.jaegaebal.mapper.UpmuMapper">

<!--공지사항 - 상세보기  -->
<select id="ntDetail" parameterType="String" resultType="NoticeBoard">
	SELECT 
			nt_code			as ntCode
			, nt_title		as ntTitle
			, nt_contents	as ntContents
			, nt_file		as ntFile
			, reg_staff_num	as regStaffNum
			, n.reg_date	as regDate
			,s.staff_name	as regStaffName
		FROM 
				um_notice_board AS n
			LEFT JOIN
				is_staff	AS s
			ON
				n.reg_staff_num = s.staff_num		
		WHERE
			nt_code = #{ntDoc}
</select>

<!--공지게시판 - 검색 리스트  -->
<select id="searchNotice" parameterType="String" resultType="NoticeBoard">
	SELECT 
		nt_code			as ntCode
		, nt_title		as ntTitle
		, nt_contents	as ntContents
		, nt_file		as ntFile
		, reg_staff_num	as regStaffNum
		, n.reg_date	as regDate
		,s.staff_name	as regStaffName
	FROM 
			um_notice_board AS n
		LEFT JOIN
			is_staff	AS s
		ON
			n.reg_staff_num = s.staff_num
	<if test="sk neq ''.toString">
	WHERE
		${sk} LIKE CONCAT('%',#{sv},'%')
	</if>
		
</select>

<!--공지게시판 -전체리스트  -->
<select id="noticeBoard" resultType="NoticeBoard">
	SELECT 
		nt_code			as ntCode
		, nt_title		as ntTitle
		, nt_contents	as ntContents
		, nt_file		as ntFile
		, reg_staff_num	as regStaffNum
		, n.reg_date	as regDate
		,s.staff_name	as regStaffName
	FROM 
			um_notice_board AS n
		LEFT JOIN
			is_staff	AS s
		ON
			n.reg_staff_num = s.staff_num
</select>


<!-- 업무관리 - 업무삭제  -->
<delete id="delTask" parameterType="int">
	DELETE FROM 
			um_task 	
	WHERE
		 task_num= #{taskNum}
</delete>

<!-- 업무관리 - 업무완료 -->
<update id="endTask" parameterType="int">
	UPDATE 
		um_task
	SET
		task_result='완료'
	WHERE 
		task_num = #{taskNum}
</update>

<!-- 업무관리 - 업무등록 -->
<insert id="addTask" parameterType="Upmu">
	INSERT INTO um_task
		(staff_num, task_info, task_reg_date)
	VALUES 
		(#{staffNum}
		, #{taskInfo}
		, NOW())
</insert>

<!-- 업무관리 - 선택한 사원의 업무  -->
<select id="staffUpmu" parameterType="String" resultType="Upmu">
SELECT 
		task_num		as taskNum
		, staff_num		as staffNum
		, task_info		as taskInfo
		, task_result	as taskResult
		, task_reg_date	as taskRegDate
	FROM 
		um_task
	where
		staff_num = #{staffNum}
</select>

<!-- 업무관리- 나의 업무 목록  -->
<select id="myTask" resultType="Upmu">
	SELECT 
		task_num		as taskNum
		, staff_num		as staffNum
		, task_info		as taskInfo
		, task_result	as taskResult
		, task_reg_date	as taskRegDate
	FROM 
		um_task

</select>

<!-- 업무관리 - 사원검색리스트  -->
<select id="staffTaskList" resultType="StaffInfo">
	SELECT 
			s.staff_num			as staffNum
			, s.staff_name		as staffName
			,j.jojic_name		as jojicName
			,l.level_name		as levelName
			,s.jojic_code		as jojicCode
	FROM 
			is_staff	AS s
		INNER JOIN 
			is_jojic	AS j
		on
			s.jojic_code = j.jojic_code 
		INNER join
			is_level	AS	l
		ON 
			s.staff_level_code = l.level_code
	<if test="sk neq ''.toString">
	WHERE
		${sk} LIKE CONCAT('%',#{sv},'%')
	</if>

</select>

<!-- 업무관리 - 해당 부서 모든 직원 -->
<select id="staffTask" resultType="StaffInfo">
	SELECT 
		s.staff_num			as staffNum
		, s.staff_name		as staffName
		,j.jojic_name		as jojicName
		,l.level_name		as levelName
		,s.jojic_code		as jojicCode
	FROM 
			is_staff	AS s
		INNER JOIN 
			is_jojic	AS j
		on
			s.jojic_code = j.jojic_code 
		INNER join
			is_level	AS	l
		ON 
			s.staff_level_code = l.level_code
</select>

</mapper>
