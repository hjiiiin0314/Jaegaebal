<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.jaegaebal.mapper.ChaeYoungMapper">
	<resultMap type="ChaeYoungBoard" id="ChaeYoungBoardResultMap">
		<result column="job_number" 		property="jobNumber"/>
		<result column="job_jojic_code" 	property="jobJojicCode"/>
		<result column="job_jojic_name" 	property="jobJojicName"/>
		<result column="job_title" 			property="jobTitle"/>
		<result column="job_content" 		property="jobContent"/>
		<result column="job_career" 		property="jobCareer"/>
		<result column="job_deadline"		property="jobDeadLine"/>
		<result column="job_reg_date" 		property="jobRegDate"/>
		<result column="job_reg_staff"		property="jobRegStaff"/>
	</resultMap>
	<resultMap type="ChaeYoungApplicant" id="ChaeYoungApplicantResultMap">
	
		<result column="app_email" 		property="appEmail"/>
		<result column="job_number" 	property="jobNumber"/>
		<result column="app_passward" 	property="appPassward"/>
		<result column="app_name" 		property="appName"/>
		<result column="app_phone" 		property="appPhone"/>
		<result column="app_reg_date"	property="appRegDate"/>
		<result column="app_num_code"	property="appNumCode"/>
		<result column="app_final_state"	property="appFinalState"/>

	</resultMap>


	<!-- 채용공고 게시글 등록 -->
	<insert id="addCYBoardPost" parameterType="ChaeYoungBoard">
	
		<selectKey resultType="String" keyProperty="jobNumber" order="BEFORE">
			SELECT
				case 
					when 
						MAX(cast(SUBSTRING(job_number,'3')AS DECIMAL))+1 <![CDATA[<]]> 10 
					then 
						CONCAT('cy000',max(cast(SUBSTRING(job_number,'3')AS DECIMAL))+1)
					when 
						max(cast(SUBSTRING(job_number,'3')AS DECIMAL))+1 <![CDATA[<]]> 100 
					then 
						CONCAT('cy00',max(cast(SUBSTRING(job_number,'3')AS DECIMAL))+1)
					when 
						max(cast(SUBSTRING(job_number,'3')AS DECIMAL))+1 <![CDATA[<]]> 1000 
					then 
						CONCAT('cy0',max(cast(SUBSTRING(job_number,'3')AS DECIMAL))+1)
					else
						CONCAT('cy',max(cast(SUBSTRING(job_number,'3')AS DECIMAL))+1) END as jobNumber				
			FROM
				cy_job_board
		</selectKey>
		INSERT INTO cy_job_board(
			job_number
			,job_jojic_code
			,job_jojic_name
			,job_title
			,job_content
			,job_career
			,job_deadline
			,job_reg_date
			,job_reg_staff
			)
			VALUES (
			#{jobNumber}
			,#{jobJojicCode}
			,#{jobJojicName}
			,#{jobTitle}
			,#{jobContent}
			,#{jobCareer}
			,#{jobDeadLine}
			,NOW()
			,'개발자' <!-- seesion 아이디 값으로 변경해야 함. -->
			)
	</insert>
	<!-- 채용공고 수정 -->
	<update id="updateCYPost" parameterType="ChaeYoungBoard">
		UPDATE cy_job_board
			<!-- 맨 마지막에 ,가 있으면 지워준다. -->
			<trim prefix="SET" suffixOverrides=",">
				<if test="jobJojicCode != null and jobJojicCode neq ''.toString()">
					job_jojic_code = #{jobJojicCode},
				</if>
				<if test="jobJojicName != null and jobJojicName neq ''.toString()">
					job_jojic_name = #{jobJojicName},
				</if>
				<if test="jobTitle != null and jobTitle neq ''.toString()">
					job_title = #{jobTitle},
				</if>
				<if test="jobContent != null and jobContent neq ''.toString()">
					job_content = #{jobContent},
				</if>
				<if test="jobCareer != null and jobCareer neq ''.toString()">
					job_career = #{jobCareer},
				</if>
				<if test="jobDeadLine != null and jobDeadLine neq ''.toString()">
					job_deadline = #{jobDeadLine}
				</if>
			</trim>
		WHERE 
			job_number=#{jobNumber}
	</update>
	<!-- 채용공고 삭제 -->
	<delete id="deleteCYPost" parameterType="String">
		DELETE FROM cy_job_board WHERE job_number=#{jobNumber}
		
<!-- DELETE FROM cy_job_board 
		WHERE 
			job_number={GET방식으로 전달}
		and
		(SELECT
			{조회된 아이디}
		 from
		 	사원테이블
		 where
			아이디컬럼명 = {session 저장된 아이디} and 비밀번호컬럼명 = {입력받은 비밀번호} 	 
		 ) = '{session에 저장된 아이디}'
		  -->
	</delete>
	<!-- 채용공고 게시글 가져오기 -->
	<select id="cyBoardList" parameterType="String" resultMap="ChaeYoungBoardResultMap">
		SELECT job_number, job_jojic_code, job_jojic_name, job_title, job_content, job_career, job_deadline, job_reg_date, job_reg_staff
		FROM cy_job_board
		<!-- 구인공고리스트에서 공고 클릭시 -->
		<if test="jobNumber != null and jobNumber neq ''.toString()">
		WHERE job_number=#{jobNumber}
		</if>
	</select>
	<!-- 부서 가져오기 -->
	<select id="getJojicCode" resultType="Jojic">
		SELECT 
			jojic_code as jojicCode
			,jojic_name as jojicName
		FROM is_jojic
	</select>
	<!-- 지원자 이메일 중복검사 -->
	<select id="emailCheck" parameterType="String" resultMap="ChaeYoungApplicantResultMap">
		SELECT 
			app_email
			,app_passward
		FROM 
			cy_applicant_register
		WHERE
			app_email = #{appEmail} 
	</select>
	<!-- 지원자 정보 가져오기 -->
	<select id="appManagement" parameterType="String" resultMap="ChaeYoungApplicantResultMap">
		SELECT 
			areg.app_email
			,areg.job_number
			,areg.app_passward
			,areg.app_name
			,areg.app_phone
			,areg.app_reg_date
			,anum.app_num_code
			,anum.app_final_state
		FROM 
			cy_applicant_register AS areg
			INNER JOIN
			cy_applicant_number AS anum
			on
			areg.app_email = anum.app_email
		<!-- 관리자가 지원번호로 조회시 -->
		<if test="appNumCode != null and appNumCode neq ''.toString()">
		where
			anum.app_num_code = #{appNumCode}
		</if>
		<!-- 지원자가 자신의 이력서 조회시 -->
		<if test="appEmail != null and appEmail neq ''.toString()">
		where
			areg.app_email = #{appEmail}
		</if>
		<!-- 채용공고 삭제 시 지원자 있는지 없는지 확인 -->
		<if test="jobNumber != null and jobNumber neq ''.toString()">
		where
			areg.job_number = #{jobNumber}
			GROUP BY job_number
		</if>
	</select>
	
	<!-- 지원자 이메일 등록 -->
	<insert id="addApplicant" parameterType="ChaeYoungApplicant">
		INSERT INTO cy_applicant_register (
			app_email
			,job_number
			,app_passward
			,app_name
			,app_phone
			,app_reg_date)
		VALUES (
			#{appEmail}
			,#{jobNumber}
			,#{appPassward}
			,#{appName}
			,#{appPhone}
			,NOW())
	</insert>
	<!-- 지원자 이메일 등록과 동시에 지원자접수번호 생성 -->
	<insert id="addAppNumCode" parameterType="ChaeYoungApplicant">
		<selectKey resultType="String" keyProperty="appNumCode" order="BEFORE">
			SELECT 
				CONCAT(subString(DATE_FORMAT(NOW(),"%Y%m%d"),3,4),
						right(#{jobNumber},4),
						LPAD((
							select
								max(cast(SUBSTRING(cyNum.app_num_code,'9')AS DECIMAL))+1
							from
								cy_applicant_number AS cyNum		
							),4,0)
					) AS 'appNumCode'
		</selectKey>
		INSERT INTO cy_applicant_number (
			app_num_code
			,job_number
			,app_email
			,app_final_state)
		VALUES (
			#{appNumCode}
			,#{jobNumber}
			,#{appEmail}
			,'임시저장')
	</insert>
</mapper>